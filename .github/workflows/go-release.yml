name: Release

on:
  push:
    tags:
      - 'v*.*.*'
env:
  # Common versions
  GITHUB_REF: ${{ github.ref }}

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: get release version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: get major release version
        run: |
          echo "MAJOR_RELEASE_VERSION=${RELEASE_VERSION%.*}" >> $GITHUB_ENV
          echo "TRIMED_RELEASE_VERSION=${RELEASE_VERSION#v}" >> $GITHUB_ENV
      - name: verify chart version
        run: |
          cat ./charts/dummy/Chart.yaml | grep -q 'version: ${{ env.TRIMED_RELEASE_VERSION }}'
      - name: install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: setup helm
        uses: azure/setup-helm@v1
      - name: chart package
        run: |
          mkdir -p release
          pushd release
          helm package ../charts/dummy/
          popd
      - name: publish release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.RELEASE_VERSION }}
          artifacts: "*.tgz"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: submit charts to OCM chart repo
        uses: actions/github-script@v6
        with:
          debug: ${{ secrets.ACTIONS_RUNNER_DEBUG }}
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            try {
              const result = await github.rest.actions.createWorkflowDispatch({
                owner: 'open-cluster-management-io',
                repo: 'helm-charts',
                workflow_id: 'download-chart.yml',
                ref: 'main',
                inputs: {
                  repo: "${{ github.repository }}",
                  version: "${{ env.TRIMED_RELEASE_VERSION }}",
                  "chart-name": "dummy",
                },
              })
              console.log(result);
            } catch(error) {
              console.error(error);
              core.setFailed(error);
            }